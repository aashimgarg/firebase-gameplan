{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","error","profile","className","to","onClick","initials","SignedOutLinks","state","firebase","props","links","uid","ProjectSummary","projects","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","map","project","id","key","Notifications","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","ownProps","match","params","data","content","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","SignUp","firstName","lastName","signUp","userData","getFirestore","createUserWithEmailAndPassword","res","doc","user","set","err","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","console","log","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f373ee1a.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = ({\n    signOut , \n    profile\n    }) =>{\n    return (\n      <ul className =\"right\">\n          <li>\n              <NavLink to='/create'>\n                  New Project\n              </NavLink>\n          </li>\n          <li>\n              <a onClick = {signOut}>\n                  Log Out\n              </a>\n          </li>\n          <li>\n              <NavLink to='/' className ='btn btn-floating blue lighten-1'>\n                  {profile.initials}\n              </NavLink>\n          </li>\n      </ul> \n    )\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(\n    null,\n    mapDispatchToProps\n) (SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch,getState, { getFirebase}) => {\n        //async call to database\n      const firebase = getFirebase();\n\n      firebase\n         .auth()\n         .signInWithEmailAndPassword(\n           credentials.email,\n           credentials.password\n        ).then(() => { \n          dispatch({ type:'LOGIN_SUCCESS' })\n        }).catch( error =>{\n          dispatch ({ type: 'LOGIN_ERROR' } , error)\n        })\n    }\n}\n\nexport const signOut = () => {\n  return (dispatch,getState, { getFirebase}) => {\n      //async call to database\n    const firebase = getFirebase();\n\n    firebase\n       .auth()\n       .signOut()\n       .then(() => { \n        dispatch({ type:'LOGOUT_SUCCESS' })\n      }).catch( error =>{\n        dispatch ({ type: 'LOGOUT_ERROR' } , error)\n      })\n  }\n}\n\nexport const signUp = (userData) => {\n  return (dispatch , getState, { getFirebase , getFirestore}) => {\n    const firebase = getFirebase() ;\n    const firestore = getFirestore() ;\n   \n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(\n        userData.email,\n        userData.password\n     ).then((res) => {\n       // res.user will contain the information about the user which just signed up\n        return (\n         firestore\n           .collection('users')\n           .doc(res.user.uid)\n           // .add method creates a new user id so used set method\n           .set({\n             firstName: userData.firstName,\n             lastName: userData.lastName,\n             initials: userData.firstName[0] + userData.lastName[0]\n           })\n     )} ).then(() => {\n       dispatch({ type: 'SIGNUP_SUCCESS'})\n       }).catch(err => {\n         dispatch({ type: 'SIGNUP_ERROR', err})\n       })\n\n  }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () =>{\n    return (\n        <ul className =\"right\">\n          <li>\n              <NavLink to='/signup'>\n                  Signup\n              </NavLink>\n          </li>\n          <li>\n              <NavLink to='/signin'>\n                  Login\n              </NavLink>\n          </li>\n      </ul>  \n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = props =>{\n    const { auth , profile } = props\n\n    const links = auth.uid \n                ? <SignedInLinks profile = {profile} /> \n                : <SignedOutLinks />\n    return (\n       <nav className = \"nav-wrapper grey darken-3\">\n           <div className =\"container\">\n               <Link to='/' className=\"brand-logo\"> GamePlan</Link>\n           </div>\n           { links }\n       </nav>  \n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        auth:state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(\n    mapStateToProps\n)(Navbar);","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({projects}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \">{projects.title}</span>\n        <p>Posted by { projects.authorFirstName} {projects.authorLastName }</p>\n        <p className=\"grey-text\"> { moment( projects.createdAt.toDate()).calendar()} </p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n        {projects && projects.map(project => {\n          return (\n            <Link to={'/project/' + project.id}  key={project.id}>\n              <ProjectSummary projects={project} />\n            </Link>\n          )\n        })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\n\nconst Notifications = () => {\n  return (\n    <div>\n      <p>Notifications</p>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    const { \n    projects,\n    auth\n  } = this.props\n\n  if (!auth.uid){\n    return <Redirect to = '/signin' />\n  }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects = {projects}/>\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth:state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: [ 'createdAt', 'desc'] }\n  ])\n  )(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { \n    project,\n    auth\n   } = props ;\n\n  if (!auth.uid) {\n    return <Redirect to='/signin' /> }\n\n  if (project ) {\n   return (\n    <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{project.title}</span>\n          <p>{project.content}</p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n         <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n          <div>{ moment( project.createdAt.toDate()).calendar()}</div>\n        </div>\n      </div>\n    </div>\n  )\n\n   } else {\n     return (\n       <div className=\"container center\">\n         <p>Loading project..</p>\n       </div>\n     )\n     }\n}\n\nconst mapStateToProps = (state,ownProps) =>{\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth:state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect ([{\n    collection: 'projects'\n  }])\n)( ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n\n  render() {\n    const {\n       authError , \n       auth\n      } = this.props\n      \n    if (auth.uid) {\n      return <Redirect to = '/' />\n    }\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className= \"red-text center\">\n              { authError ? <p> {authError} </p>  : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    authError: state.auth.authError,\n    auth:state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signIn: (credentials) => dispatch(signIn(credentials))\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp} from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  \n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n  }\n  render() {\n    const { auth , authError } = this.props\n     \n    if (auth.uid) {\n      return <Redirect to = '/' />\n    }\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className = \"red-text center\">\n              { authError ? <p> { authError} </p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    signUp: (userData) => dispatch(signUp(userData))\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n   this.props.createProject(this.state)\n   this.props.history.push('/');\n  }\n  render() {\n    const { auth } = this.props\n\n    if(!auth.uid) {\n      return <Redirect to = '/signin' />\n    }\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth\n  } \n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project)) \n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch,getState, { getFirebase , getFirestore }) => {\n\n        //async call to database\n\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid\n\n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId, \n        createdAt: new Date()\n      }).then(() => { \n         dispatch({ type:'CREATE_PROJECT' })\n        }).catch((error) =>{\n         dispatch ({ type: 'CREATE_PROJECT_ERROR' } , error)\n        })\n    }\n}","import React , { Component } from 'react';\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n  authError:null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type){\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        authError: null\n      } \n    case 'LOGIN_ERROR':\n      return {\n        ...state,\n        authError: 'Login Failed'\n      }\n    case 'LOGOUT_SUCCESS':\n      console.log('----LOGOUT SUCCESS------')\n      return {\n        ...state,\n        authError: null\n      } \n    case 'LOGOUT_ERROR':\n      return {\n        ...state,\n        authError: 'Logout Failed'\n      }\n    case 'SIGNUP_SUCCESS':\n      console.log('----LOGOUT SUCCESS------')\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNUP_ERROR':\n      return {\n        ...state,\n        authError: action.err.message\n        // the error is according to the action i.e if email is wrong then please enter correct email similar with password\n      }         \n    default:\n      return state ;\n  }\n  \n};\n\nexport default authReducer;\n\n","const initState = {\n  projects: [\n    {id: '1', title: 'help me find peace', content: 'hello world'},\n    {id: '2', title: 'feel the power', content: 'hello world'},\n    {id: '3', title: 'roam in the rome', content: 'hello world'}\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('create project',action.type);\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  } \n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer\n\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyB0JmZqnZdE5QqIvVIYpRB-apgoHENMnJM\",\n    authDomain: \"fir-gameplan-bea55.firebaseapp.com\",\n    databaseURL: \"https://fir-gameplan-bea55.firebaseio.com\",\n    projectId: \"fir-gameplan-bea55\",\n    storageBucket: \"fir-gameplan-bea55.appspot.com\",\n    messagingSenderId: \"552483052874\",\n    appId: \"1:552483052874:web:e3ec851bd4a1c7299a75b3\",\n    measurementId: \"G-RNXR4GMH6Q\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true });\n  \n  export default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore , applyMiddleware , compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore,getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer ,\n  compose( \n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true,userProfile: 'users',  attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) \n    )\n  );\n\n  store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n      <React.StrictMode>\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  })\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}